# git reset --hard origin/master
# git clean --force
# git checkout e65b56344964e10f756db78b8a44fd751ea164ed
# patch -p1 < ../go.amipi400/amiberry.amipi400.patch
# make clean
# make -j2 PLATFORM=rpi4
# or
# make PLATFORM=x86-64

diff --git a/Android.mk b/Android.mk
index 1d5f12af..22b3ec16 100644
--- a/Android.mk
+++ b/Android.mk
@@ -255,7 +255,9 @@ LOCAL_SRC_FILES := src/akiko.cpp \
                     src/osdep/gui/PanelSavestate.cpp \
                     src/osdep/gui/main_window.cpp \
                     src/osdep/gui/Navigation.cpp \
-                    src/osdep/vkbd/vkbd.cpp
+                    src/osdep/vkbd/vkbd.cpp \
+                    src/amipi400/utils.cpp \
+                    src/amipi400/handler.cpp
 
 ifeq ($(TARGET_ARCH_ABI),arm64-v8a)
     LOCAL_SRC_FILES += src/osdep/aarch64_helper_min.s
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1e403865..53d7f405 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -245,6 +245,8 @@ add_executable(${PROJECT_NAME}
 	src/osdep/amiberry_whdbooter.cpp
 	src/osdep/sigsegv_handler.cpp
 	src/osdep/retroarch.cpp
+    src/amipi400/utils.cpp
+    src/amipi400/handler.cpp
 	src/sounddep/sound.cpp
 	src/threaddep/threading.cpp
 	src/osdep/gui/ControllerMap.cpp
diff --git a/Makefile b/Makefile
index 8f51fc7a..46a94dd3 100644
--- a/Makefile
+++ b/Makefile
@@ -607,6 +607,9 @@ OBJS = \
 	src/osdep/gui/PanelVirtualKeyboard.o \
 	src/osdep/gui/main_window.o \
 	src/osdep/gui/Navigation.o \
+	src/amipi400/handler.o \
+	src/amipi400/ini-exec.o \
+	src/amipi400/utils.o \
 	src/osdep/vkbd/vkbd.o
 
 USE_JIT=1
diff --git a/src/cfgfile.cpp b/src/cfgfile.cpp
index 7d33dc78..a4179841 100644
--- a/src/cfgfile.cpp
+++ b/src/cfgfile.cpp
@@ -3840,12 +3840,20 @@ static int cfgfile_parse_host (struct uae_prefs *p, TCHAR *option, TCHAR *value)
 		return 1;
 	}
 
-	if (cfgfile_yesno(option, value, _T("magic_mouse"), &vb)) {
-		if (vb)
-			p->input_mouse_untrap |= MOUSEUNTRAP_MAGIC;
-		else
-			p->input_mouse_untrap &= ~MOUSEUNTRAP_MAGIC;
-		return 1;
+	if (!_tcsicmp(option, _T("magic_mouse")) && !_tcsicmp(value, _T("none"))) {
+		// amipi400: disable mouse ungrab on middle click
+		// command line:
+		// -s magic_mouse=none
+		p->input_mouse_untrap = MOUSEUNTRAP_NONE;
+	}
+	else {
+		if (cfgfile_yesno(option, value, _T("magic_mouse"), &vb)) {
+			if (vb)
+				p->input_mouse_untrap |= MOUSEUNTRAP_MAGIC;
+			else
+				p->input_mouse_untrap &= ~MOUSEUNTRAP_MAGIC;
+			return 1;
+		}
 	}
 
 #ifdef GFXFILTER
diff --git a/src/inputdevice.cpp b/src/inputdevice.cpp
index 86be4612..10a94ff9 100644
--- a/src/inputdevice.cpp
+++ b/src/inputdevice.cpp
@@ -4797,7 +4797,8 @@ static bool inputdevice_handle_inputcode2(int monid, int code, int state, const
 		//IRQ_forced(7, 0);
 		break;
 	case AKS_PAUSE:
-		pausemode(newstate > 0 ? 1 : newstate);
+		// amipi400: disable pausing by pause/break key
+		// pausemode(newstate > 0 ? 1 : newstate);
 		break;
 	case AKS_SINGLESTEP:
 		if (pause_emulation)
diff --git a/src/osdep/amiberry.cpp b/src/osdep/amiberry.cpp
index f371325f..c914958e 100644
--- a/src/osdep/amiberry.cpp
+++ b/src/osdep/amiberry.cpp
@@ -83,6 +83,8 @@ int log_scsi;
 int uaelib_debug;
 int pissoff_value = 15000 * CYCLE_UNIT;
 
+#include "amipi400/handler.h"
+
 extern FILE* debugfile;
 SDL_Cursor* normalcursor;
 
@@ -183,12 +185,20 @@ amiberry_hotkey get_hotkey_from_config(std::string config_option)
 
 void set_key_configs(struct uae_prefs* p)
 {
-	if (strncmp(p->open_gui, "", 1) != 0)
-		// If we have a value in the config, we use that instead
-		enter_gui_key = get_hotkey_from_config(p->open_gui);
-	else
-		// Otherwise we go for the default found in amiberry.conf
-		enter_gui_key = get_hotkey_from_config(amiberry_options.default_open_gui_key);
+	if (strncmp(p->open_gui, "none", 4) != 0) {
+		if (strncmp(p->open_gui, "", 1) != 0)
+			// If we have a value in the config, we use that instead
+			enter_gui_key = get_hotkey_from_config(p->open_gui);
+		else
+			// Otherwise we go for the default found in amiberry.conf
+			enter_gui_key = get_hotkey_from_config(amiberry_options.default_open_gui_key);
+	}
+	else {
+		// amipi400: open_gui is "none", so "enter_gui_key" will be disabled
+		// command line:
+		// -s open_gui=none
+		enter_gui_key.scancode = -1;
+	}
 	// if nothing was found in amiberry.conf either, we default back to F12
 	if (enter_gui_key.scancode == 0)
 		enter_gui_key.scancode = SDL_SCANCODE_F12;
@@ -464,8 +474,17 @@ void releasecapture(struct AmigaMonitor* mon)
 	if (!mon_cursorclipped)
 		return;
 	SDL_SetWindowGrab(mon->sdl_window, SDL_FALSE);
-	SDL_SetRelativeMouseMode(SDL_FALSE);
-	SDL_ShowCursor(SDL_ENABLE);
+
+	if (currprefs.input_mouse_untrap != MOUSEUNTRAP_NONE) {
+		// amipi400: do not show mouse cursor when
+		// command line:
+		// magic_mouse=none
+		// used with:
+		// pause_emulation=1
+		SDL_SetRelativeMouseMode(SDL_FALSE);
+		SDL_ShowCursor(SDL_ENABLE);
+	}
+
 	mon_cursorclipped = 0;
 }
 
diff --git a/src/zfile.cpp b/src/zfile.cpp
index f37314e0..50f66452 100644
--- a/src/zfile.cpp
+++ b/src/zfile.cpp
@@ -36,6 +36,8 @@
 #include "archivers/dms/pfile.h"
 #include "archivers/wrp/warp.h"
 
+#include "amipi400/consts.h"
+
 static struct zfile *zlist = 0;
 
 const TCHAR *uae_archive_extensions[] = { _T("zip"), _T("rar"), _T("7z"), _T("lha"), _T("lzh"), _T("lzx"), _T("tar"), NULL };
@@ -2565,6 +2567,13 @@ uae_u32 zfile_crc32(struct zfile *f)
 	pos = zfile_ftell32(f);
 	zfile_fseek(f, 0, SEEK_END);
 	size = zfile_ftell32(f);
+
+        // amipi400: generate crc32 only from first 4096
+        // bytes to speedup loading from floppy drive
+        if (size > CRC32_MAX_SIZE) {
+                size = CRC32_MAX_SIZE;
+        }
+
 	p = xmalloc (uae_u8, size);
 	if (!p)
 		return 0;
